apiVersion: apps/v1
kind: Deployment
metadata:
  name: finn-deployment
  namespace: finn
  labels:
    app: finn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: finn
  template:
    metadata:
      labels:
        app: finn
    spec:
      initContainers:
        - name: apply-migrations
          image: localhost:32000/finn:latest
          command: ["dotnet", "finn.dll", "--migrate"]
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: finn-env
          volumeMounts:
            - name: storage              
              mountPath: /app/data     

      containers:
        - name: app
          image: localhost:32000/finn:latest
          ports:
            - containerPort: 5000
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: finn-env
          volumeMounts:
            - name: storage              
              mountPath: /app/data       

      volumes:
        - name: storage                  
          hostPath:
            path: /mnt/storage          
            type: Directory
                
---

apiVersion: v1
kind: Service
metadata:
  namespace: finn
  name: finn-svc
  labels:
    finn.service: finn
spec:
  type: ClusterIP
  selector:
    app: finn
  ports:
    - name: finn-api
      port: 5000
      targetPort: 5000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: finn-ingress
  namespace: finn
spec:
  ingressClassName: nginx  
  rules:
    - host: finn.10.0.0.187.nip.io  
      http:
        paths:
          - path: /  
            pathType: Prefix
            backend:
              service:
                name: finn-svc
                port:
                  number: 5000